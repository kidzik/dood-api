#summary Requests for user's localization.

= Location requests=

Content:
   * [RequestsLocation#Location_Set Location Set]

== Location Set =

|| request URL || *(HTTPS)* `/location/set/` || 
|| method || *POST* ||
|| description || Logins user and starts authenticated session ||

<font color="red"> _warning: currently we support HTTP and GET method in this request_ </font>

*Prameters:*
|| *parameter* || *type* || *description* ||
|| `session_key` || `String` || User's session key (anonymous or authenticated)  ||
|| `latitude` || `Double` || User's current latitude  ||
|| `longtitude` || `Double` || User's current longtitude ||
|| `default_city` || `String` || Default city if coordinates are wrong or too far away from any database entry ||
|| _`get_advert`_ || `Boolean` || True if [DatatypesAdvertProximity AdvertProximity] object requested. ||
|| _`only_open`_ || `Boolean` || Get only offers from currently openn businesses. Make sense only with `get_advert="true"`||
|| `categories` || `List<Long>` || CSV with IDs of categories. Filters search results. Make sense only with _`get_advert`_="true" ||


*Returns data (for MSG_OK)*
|| how many || type ||
|| 0-1 || [DatatypesAdvertProximity AdvertProximity object] ||
|| 0-50 || [DatatypesBusiness Business objects] ||

If AdvertProximity object is retured then all Business objects are treated as `"offers"`. Otherwise it's just presenting contextual search results of businesses. Clients should distinguish these two situations.

<font color="red">
_*note:*_ first version of API will send all Business objects from the list in [DatatypesAdvertProximity AdvertProximity]. Later on we will support addmitting system (users will be able to admit having certain object with certain version).
</font>

*Returns HTTP code*

|| *HTTP code* || *meaning*||
|| 200 || server understood request || 
|| 401 || session_key not present or expired ||
|| any other || server unreachable, unable to respond ||

*Returns API code (for HTTP code 200)*

|| *API CODE* || *meaning* ||
|| MSG_OK || new location has been set ||
|| ERR_REGION_NOT_SUPPORTED || coordinates are to far from any database entry. `default_city` parameter has been considered. || 


_warning: data array can be empty (but data field should be present in the reponse)._

_warning 2: ERR_REGION_NOT_SUPPORTED response looks the same except for the API code. We simply change users's position to `default_city`. If default city is not supported (recognized) we take Warsaw (PL) as default_

_*Note:*_

  * Pole `get_advert` definiuje czy klient chce w odpowiedzi dostać obiekt [DatatypesAdvertProximity AdvertProximity]. Serwer decyduje o tym co przesłać klientowi. Klient biernie wyświetla dane przychodzące od serwera.

  * Dane przesłane przez serwer mogą nie zawierać obiektu Proximity Advertisemenet a jedynie obiekty typu [DatatypesBusiness Business]. W takim wypadku serwer uznał, że w okolicy nie ma żadnych ofert do pokazania i po prostu przesyła wybrane (wg ewentualnych ograniczeń) dane businessów (klient może je pokazać lub nie).

  * Pola `only_open`, `categories` nie mają sensu jeśli nie ma flagi `get_advert=true`.

  * W pierwszej wersji implementacji API w polu data w przypadku ustawienia flagi get_advert zwracane są zawsze wszystkie obiekty [DatatypesBusiness Business] z listy `businesses` w _AdvertProximity_. W przyszłości będzie można wykorzystać mechanizm przyznawania się do posiadania określonych obiektów. 