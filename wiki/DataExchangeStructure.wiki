#summary Data exchange structure for server communication.


= Data Exchange Structure =

Content:

  * [DataExchangeStructure#Response_format Response format]
  * [DataExchangeStructure#Request_format Request format]

== Response format ==

{{{
{	
   "code"         : 243,
   "message"      : "Description",
   "data"         : [ ],
}
}}}


|| *Variable* || *Type* || *Description* || 
|| `code` || `Integer` || Error code || 
|| `message` (optional) || `String` || Error message || 
|| `data` (optional) || `Array` || Array of results. Structures of data objects. Always up-to-date - there is no way to get archive ones. || 

Data may contain not only objects requested directly by client. There might be also structures related to them. If for example client requests for Business object than he not only get Business structure, but also structures of Categories to which it belongs.

(!!!) Dane w tablicy data są przesyłane z zachowaniem kolejności. W pierwszym rzędzie przesyłane są te dane, o które użytkownik poprosił, a dopiero później ewentualne dodatkowe obiekty. *Czy na pewno jest sens to wymuszac? I tak w `data` bedzie burdel.*.

== Request format ==

API Request is either POST or GET HTTP request, with parameters in standard HTTP format:
`param1=value1&param2=value2&...`

Almost every request has session key:

|| `session_key` || Session key (must be given everywhere except /session/start/ request || 

Example of other parameters:

|| `ids` || string with ids of items that client want ||
|| `has` || string with ids we already have in format `"id1,version1;id2;version2"` || 
<wiki:comment>
|| `new` || JSONObject  z jednym obiektem który tworzymy . Obiekt powinien być pozbawiony pól id i version (te nadaje serwer) ale musi mieć pole type (typ tworzonego obiektu) ||
|| up || JSONObject  z jednym obiektem który uaktualniamy (cały obiekt). Obiekt musi mieć wszystkie z pól id , version , type || 
|| del || JSONObject  z jednym obiektem który usuwamy (tylko nagłówek). Obiekt musi mieć wszystkie z pól id , version , type. || 
</wiki:comment>